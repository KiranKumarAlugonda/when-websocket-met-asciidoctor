[
	{
		"id" : "1234",
		"name" : "adocSource",
		"source" : "= Real-time collaborative editor for AsciiDoc\nMaxime Greau <https://github.com/mgreau[@mgreau]>\nv0.1.0.alpha4, March 16, 2014\n:imagesdir: https://raw.github.com/mgreau/when-websocket-met-asciidoctor/master/doc/img/\n:toc:\n:toclevels: 3\n:idseparator: -\n:online-demo: http://wildfly-mgreau.rhcloud.com/ad-editor\n:milestones: https://github.com/mgreau/when-websocket-met-asciidoctor/issues/milestones\n:issues: https://github.com/mgreau/when-websocket-met-asciidoctor/issues\n:asciidoctor-url: http://asciidoctor.org\n:asciidoctorj-url: https://github.com/asciidoctor/asciidoctorj\n:asciidoctorjs-url: https://github.com/asciidoctor/asciidoctor.js\n:asciidoctor-backends-url: https://github.com/asciidoctor/asciidoctor-backends\n:wildfly-url: http://download.jboss.org/wildfly/8.0.0.Final/wildfly-8.0.0.Final.zip\n:demo-url: https://raw.github.com/mgreau/when-websocket-met-asciidoctor/master/doc/demo/\n\n== Overview\n\n.This project gives you the possibility to *work on the same AsciiDoc file with a team and see the rendering in realtime*.\n\nIt's based on the {asciidoctor-url}[Asciidoctor project] thanks to : \n\n* the Java API provided by {asciidoctorj-url}[AsciidoctorJ]\n* the Javascript libraries provided by {asciidoctorjs-url}[Asciidoctor.js]\n\n== How to test it ?\n\n. *Install it* quickly (0.1.0-alpha3)\n   \n   curl https://raw.github.com/mgreau/when-websocket-met-asciidoctor/master/install.sh | bash\n   \n. or *try it online* at {online-demo} (running on OpenShift).\n. or clone the project and follow the instructions below\n\n\n[[collaborative-editor]]\n.Demo Collaborative Editor\nimage::../demo/collaborative-editor.gif[Collaborative-editor, 600, link=\"{demo-url}collaborative-editor.gif\"]\n\nIf you have an existing asciidoc file, you can drag and drop this file to the editor :\n\n[[drag-drop]]\n.Drag and drop feature\nimage::ad-editor-dragdrop.png[Drag and drop feature, 600, link=\"{demo-url}ad-editor-dragdrop.png\"]\n\nYou can also work on an offline mode with just your browser :\n\n[[offline]]\n.Offline mode feature\nimage::ad-editor-offline.png[Offline mode feature, 600, link=\"{imagesdir}ad-editor-offline.png\"]\n\n== 0.1.0-alpha4-SNAPSHOT (dev in progress)\n\n* *+dzSlides backend+* : you can work on your slides for a presentation !\n\n\n== 0.1.0-alpha3 - new features\n\n* +*Full offline mode+* : if you are not connected to the server by WebScoket protocol, then the\nrendering view is still working in real-time with the Javascript project asciidoctor.js\n* +*Drag and Drop*+ : you can *drag a AsciiDoc file* from your laptop and *drop it into the editor* and the content of the file\nwill be loaded into the editor\n\n== 0.1.0-alpha2 new features\n\n* Create a *new space* OR *join others author* with a spaceID\n* *Browser storage* with HTML5 IndexedDB for backup (save and load AsciiDoc source)\n* *Fullscreen mode* for HTML5 preview\n* Improved UI Design\n* HTML5 preview in realtime : \n** *each time the AsciiDoc source is changed* if you have clicked on +Render On Change+\n** *each time you press \"Alt+R\"* if you have clicked on +Render On Alt+R+ button\n* *Patch feature* :\n** if an other author send a version, you can click on +Compute Diff+ button to see differences between your adoc file and the last adoc file\n** if the patch seems ok, click on +Apply Patch+ and you adoc source will be up to date\n* *Load the last AsciiDoc source* send by an other author\n\n[diff feature]\n.Compute diff feature\nimage::ad-editor-diff.png[Diff feature example, 600]\n\n[patch feature]\n.patch feature\nimage::ad-editor-patch.png[Patch feature example, 600]\n\n== Changelog\n\nYou can read all changes between each release in the link:CHANGELOG.adoc[changelog file].\n\n== Roadmap\n\nA lot of cool features are planned :) You can read all {issues}[open and closed issues] and {milestones}[milestones]\n\n== [DEV MODE] Install on your laptop\n\n[IMPORTANT]\n.Prerequisites\n====\n* JDK 7\n* Apache Maven 3.1\n====\n\n. Clone or download this github project (*+$APP_HOME+*)\n\n. Installing the Java EE 7 Compliance App server  \n.. Download {wildfly-url}[WildFly 8.0.0-Final] (*+$JBOSS_HOME+*)\n.. Then you need to deploy the link:module/README.adoc[Asciidoctor module] into your WildFly app server\n.. For the slides features, you have to install {asciidoctor-backends-url}[asciidoctor-backends] into +$JBOSS_HOME/standalone/datas+\n\n. Installing Bower\n.. Bower depends on Node and npm. It's installed globally using npm:\n  \n  npm install -g bower\n  \n.. Installing the bower dependencies needed by this app (into +$APP_HOME/src/main/webapp/libs+)\n\n  cd $APP_HOME\n  bower install\n  \n. Build the WAR and test it into WildFly AS with maven/arquillian : \n\n   .. if the environement variable +$JBOSS_HOME+ is set :\n\n   mvn clean package -Pwildfly-managed-arquillian\n\n   .. if you haven't set the +$JBOSS_HOME+ env variable :\n\n   mvn clean package -Pwildfly-managed-arquillian -DserverRoot=<path_to_the_server>\n   \n.  Deploy the app automatically with maven : \n\n  .. if the app server is started\n  \n  mvn wildfly:deploy -Dmaven.test.skip=true\n  \n  .. if the app server isn't started\n  \n  mvn wildfly:run -Dmaven.test.skip=true -Djboss-as.home=<path_to_the_server>\n\n. Launch your browser and enjoy :)\n\n   *  http://localhost:8080/ad-editor\n\n\n== Technology used\n\n* Asciidoctor project\n** AsciidoctorJ 0.1.4\n** asciidocor.js\n* Java EE 7 \n** CDI 1.1\n** WebSocket 1.0\n** JSON-P 1.0\n** EJB 3.2\n* Web Client\n** AngularJS 1.2.11\n** Ace Editor\n** Bootstrap 3.0\n* Tests\n** JUnit 4.8\n** Arquillian 1.1.2\n* Java EE 7 Compliance App server\n\n"	
	}
]	